@using Identity.Server.MVC.Models
@using Identity.Server.MVC.Options
@using Identity.Server.MVC.Services.Abstractions
@using IdentityServer4.Extensions
@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Options
@inject IOptionsSnapshot<OrganizationOptions> OrganizationOptions
@inject UserManager<ApplicationUser> UserManager
@inject IProfilePictureService ProfilePictureService

@{
    string? name = null;
    string? profilePictureInBase64 = null;
    string? userInitials = null;
    var user = await UserManager.GetUserAsync(Context.User);
    if (!true.Equals(ViewData["signed-out"]))
    {
        name = Context.User.GetDisplayName();
        if(user is not null)
        {
            user.ProfilePicture = await ProfilePictureService.GetProfilePictureAsync(user.ProfilePictureId ?? int.MaxValue);
        }
        profilePictureInBase64 = user?.ProfilePicture != null ? Convert.ToBase64String(user.ProfilePicture.Data) : null;
        if (!string.IsNullOrWhiteSpace(profilePictureInBase64))
        {
            profilePictureInBase64 = $"data:${user?.ProfilePicture?.ContentType};base64,{profilePictureInBase64}";
        }
        else
        {
            var initialCharEnumerable = name?
                .Split(' ')
                .Where(s => !string.IsNullOrEmpty(s)) // Ensure the string is not empty
                .Select(s => s[0])
                .Take(2)
                .ToArray();
            if (initialCharEnumerable is null)
            {
                userInitials = string.Empty;
            }
            else
            {
                userInitials = initialCharEnumerable.Any() ? string.Join("", initialCharEnumerable).ToUpper() : null;
            }
        }
    }

    var organizationName = OrganizationOptions?.Value.Name;
}
<head>
    <link rel="stylesheet" href="~/css/site.css">
</head>
<nav class="border-gray-200 bg-white dark:bg-gray-900">
    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
        <a href="@Url.Action("Index", "Home")" class="flex items-center space-x-3 rtl:space-x-reverse">
            <img src="~/favicon.ico" class="h-8" alt="Company Logo"/>
            <span class="text-gray-500 self-center text-2xl font-semibold whitespace-nowrap dark:text-white">@organizationName</span>
        </a>
        <div class="flex items-center md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse">
            @if (!string.IsNullOrWhiteSpace(name))
            {
                <button type="button" class="flex text-sm bg-gray-800 rounded-full md:me-0 focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600" id="user-menu-button" aria-expanded="false" data-dropdown-toggle="user-dropdown" data-dropdown-placement="bottom">
                    <span class="sr-only">Open user menu</span>
                    @if (string.IsNullOrWhiteSpace(@profilePictureInBase64))
                    {
                        <div class="relative inline-flex items-center justify-center w-10 h-10 overflow-hidden bg-gray-100 rounded-full dark:bg-gray-600">
                            <span class="font-medium text-gray-600 dark:text-gray-300">@userInitials</span>
                        </div>
                    }
                    else
                    {
                        <img class="w-8 h-8 rounded-full" alt="user photo" src="@profilePictureInBase64"/>
                    }
                </button>
                <div class="z-50 hidden my-4 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600" id="user-dropdown">
                    <div class="px-4 py-3">
                        <span class="block text-sm text-gray-900 dark:text-white">@name</span>
                        <span class="block text-sm  text-gray-500 truncate dark:text-gray-400">@user?.Email</span>
                    </div>
                    <ul class="py-2" aria-labelledby="user-menu-button">
                        <li>
                            <a href="@Url.Action("Index", "Home")" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">Dashboard</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Index", "Settings")" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">Settings</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Logout", "Account")" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">Sign out</a>
                        </li>
                    </ul>
                </div>
                <button data-collapse-toggle="navbar-user" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-user" aria-expanded="false">
                    <span class="sr-only">Open main menu</span>
                    <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
                    </svg>
                </button>
            }
            else
            {
                <a href="@Url.Action("Login", "Account")" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">Sign In</a>
            }
            <div class="justify-end">
                <button id="theme-toggle" type="button" class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5">
                    <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                    </svg>
                    <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
                    </svg>
                </button>
            </div>
        </div>
        <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-user">
            <ul class="flex flex-col font-medium p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
                <li>
                    <a href="#" class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">About</a>
                </li>
                <li>
                    <a href="#" class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Services</a>
                </li>
            </ul>
        </div>
    </div>
</nav>